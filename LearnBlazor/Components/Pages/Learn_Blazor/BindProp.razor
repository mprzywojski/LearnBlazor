@page "/learnBlazor/bindprop"
@* @using Models bo są w Imports.razor*@

<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3>
        <hr />
        Is active: <input type="checkbox" @bind="@Product.IsActive" /> <br />
        Input Price: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" /> 
        <br />
        <br />
        Product Properties
        <br />
        <select @bind="selectedProp">
            @foreach (var prop in Product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
    </div>
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3>
        <hr />
        Name: @Product.Name <br />
        IsActive : @Product.IsActive <br />
        Price: @Product.Price <br />
        This Product is : @(Product.IsActive ? "Active" : "Inactive") <br />

        <br />
        Selected Prop: @selectedProp
        @if (!string.IsNullOrEmpty(selectedProp))
        {
            @* <p>Selected Value: @Product.ProductProperties.FirstOrDefault(u => u.Key == selectedProp).Value</p> *@
        }
    </div>
    <div class="col-12 border p-4">
        <h2 class="text-success">Product Table</h2>
        <table class="table table-striped">
            <thead>
                <tr>
                    <td>Product Name</td>
                    <td>Price</td>
                    <td>Is Active</td>
                </tr>
            </thead>
            <tbody>
                @foreach(var prod in ProductList)
                {
                    <tr>
                        <td><input type="text" @bind="prod.Name" @bind:event="oninput" /></td>
                        <td><input type="text" @bind="prod.Price" @bind:event="oninput" /></td>
                        <td><input type="checkbox" @bind="prod.IsActive" /></td>
                    </tr>
                }
            </tbody>
        </table>
        <br />
        <br />
        <h2>Product Summary</h2>
        @foreach(var prod in ProductList)
        {
            <p>@prod.Name [@prod.Price] is @(prod.IsActive ? "Active" : "InActive")</p>
        }
    </div>
</div>


@* Jesli uzyjemy bind-value to wezme na poczatek wartosc domyslną *@
Is active:
<input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive?"checked": null)" /><br />
Input Price: <input type="number" @bind="@Product.Price" @bind:event="oninput" /> <br /> 


@code {
    private string selectedProp = "";

    Product Product = new()
    {
        Id = 1,
        Name = "Product 1",
        IsActive = true,
        Price = 5,
        ProductProperties = new List<Product_Prop>()
        {
            new Product_Prop{ Id = 1, Key = "Color", Value = "Red" },
            new Product_Prop{ Id = 2, Key = "Size", Value = "20oz" },
            new Product_Prop{ Id = 3, Key = "Flavor", Value = "Rose" }
        },
    };

    List<Product> ProductList= new();

    protected override void OnInitialized()
    {
        ProductList.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 51,
            ProductProperties = new List<Product_Prop>()
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
                new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
                new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
            }
        });

        ProductList.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 21,
            ProductProperties = new List<Product_Prop>()
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                new Product_Prop {Id = 3,Key = "Color",Value = "White"}
            }
        });
    }
}
