@page "/learnrouting"
@page "/learnrouting/{Param1:int}"
@page "/learnrouting/{Param1:int}/{Param2}"
@page "/learnBlazor/learnrouting"
@page "/learnrouting/catch-all/{*PageParameters}"

@inject NavigationManager _NavigationManager

<h3>LearnRouting</h3>
<p>Param1: @Param1</p>
<p>Param2: @Param2</p>
<p>Page Parameters: @PageParameters</p>

<div class="bg-info" style="height:1000px"></div>
@* w NavLink #targetElement przejdzie od razu do tego elementu *@
<h2 id="targetElement">Main title</h2>

<a href="learnrouting?Param2=Learn&Param3=Blazor" class="btn btn-primary">Navigate to query parameter</a>
<button class="btn btn-success" @onclick="LoadParameters">Load Parameters</button>

<button class="btn btn-primary" @onclick="NavigateToQueryParam">Navigate to query parameters</button>

<br />

@code {
    [Parameter]
    public int Param1 { get; set; }

    [Parameter]
    public string Param2 { get; set; } = "";

    [Parameter]
    public string Param3 { get; set; } = "";

    // przechwytuje parametry bezposrednio z query string zamiast z route {Param2}
    [SupplyParameterFromQuery(Name = "Param2")]
    public string ParamQuery { get; set; } = "";

    [Parameter]
    public string PageParameters { get; set; } = "";

    private void LoadParameters()
    {
        // This method can be used to load parameters or perform actions
        // when the button is clicked, if needed.
        //NavigationManager.NavigateTo($"learnrouting/{Param1}/{Param2}");
        var uri = new Uri(_NavigationManager.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        // lub
        //var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);

        Param2 = query["Param2"];
        Param3 = query["Param3"];

        _NavigationManager.Refresh(forceReload: true);
    }

    private void NavigateToQueryParam()
    {
        // some calculation
        // Navigate to a URL with query parameters
        _NavigationManager.NavigateTo($"learnrouting?Param2=Learn&Param3=Blazor");
    }
}
